{"version":3,"sources":["axios.js","components/Row.js","request.js","components/Banner.js","components/Nav.js","components/App.js","index.js"],"names":["axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","response","data","results","fetchData","AllMovies","map","movie","key","id","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","handleClick","className","src","poster_path","backdrop_path","alt","original_name","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fecthTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f57c0a81.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3'\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"../CSS/row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst posterBaseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchURL, isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(fetchURL);\r\n      setMovies(response.data.results);\r\n      return response;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1\r\n    }\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if(trailerUrl){\r\n      setTrailerUrl(\"\");\r\n    }else {\r\n      movieTrailer(movie.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  //console.log(movies);\r\n\r\n  const AllMovies = movies.map((movie) => {\r\n    return (\r\n      <img\r\n        key={movie.id}\r\n        onClick = {() => handleClick(movie)}\r\n        className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\r\n        src={`${posterBaseURL}${\r\n          isLargeRow ? movie.poster_path : movie.backdrop_path\r\n        }`}\r\n        alt={movie.original_name}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2> {title} </h2>\r\n      <div className=\"row__posters\">{AllMovies}</div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","const API_KEY = 'acab3e5a68a61de3306ea0dbda14d774';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fecthTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../request\";\r\nimport '../CSS/Banner.css';\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        response.data.results[\r\n          [Math.floor(Math.random() * response.data.results.length - 1)]\r\n        ]\r\n      );\r\n      return response;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str , n) {\r\n    return str?.length > n ? str.substr(0 , n-1) + \"...\" : str;\r\n  }\r\n\r\n  console.log(movie);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\"\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        {/*Title*/}\r\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n        {/*Two Buttons*/}\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\"> Play </button>\r\n          <button className=\"banner__button\"> My List </button>\r\n        </div>\r\n        \r\n        {/*Description*/}\r\n        <h1 className=\"banner__description\"> \r\n          {truncate(movie.overview , 150 )}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, {useEffect, useState} from 'react';\r\nimport '../CSS/Nav.css';\r\n\r\nconst Nav = () => {\r\nconst [show , handleShow] = useState(false);\r\n\r\nuseEffect(() => {\r\n  window.addEventListener(\"scroll\" , () => {\r\n    if(window.scrollY > 100){\r\n      handleShow(true);\r\n    } else {handleShow(false)};\r\n  });\r\n  return () => {\r\n    window.removeEventListener(\"scroll\");\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'}`} >\r\n      <img \r\n        className=\"nav__logo\" \r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"netflix Logo\"\r\n      />\r\n      <img \r\n        className=\"nav__avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"netflix avatar\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Row from \"./Row\";\r\nimport requests from \"../request\";\r\nimport \"../CSS/App.css\";\r\nimport Banner from \"../components/Banner\";\r\nimport Nav from './Nav';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row\r\n        title=\"Netflix Originals\"\r\n        fetchURL={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending\" fetchURL={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchURL={requests.fecthTopRated} />\r\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romantic Movies\" fetchURL={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}